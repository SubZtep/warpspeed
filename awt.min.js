const I=()=>1e3*(Math.random()-.5);class g{constructor(I,g,s){this.x=I,this.y=g,this.z=s,this.size=.5+Math.random()}}class s{config={};stars=[];constructor(I){this.canvas=I,this.ctx=this.canvas.getContext("2d")}update(s){for(const[C,F]of Object.entries(s))if(this.config[C]!==F){switch(C){case"resolution":(s.starScale||this.config.starScale)&&(this.size=F/(10/(s.starScale||this.config.starScale)),this.maxLineWidth=this.size/30);break;case"starScale":(s.resolution||this.config.resolution)&&(this.size=(s.resolution||this.config.resolution)/(10/F),this.maxLineWidth=this.size/30);break;case"density":const C=Math.ceil(1e3*F),Q=C-this.stars.length;if(Q>0)for(let s=0;s<Q;s++){const s=new g(I(),I(),1e3*Math.random());this.stars.push(s)}else this.stars.length=C;break;case"starColor":const c="#"===(U=F).charAt(0)&&7===U.length?{r:parseInt(U.substr(1,2),16),g:parseInt(U.substr(3,2),16),b:parseInt(U.substr(5,2),16)}:{r:255,g:255,b:255};this.starR=c.r,this.starG=c.g,this.starB=c.b}this.config[C]=F}var U}draw(I){this.move(I);const g=this.config.resolution,s=this.config.resolution;this.size=Math.max(g,s)/(10/this.config.starScale);const U=this.ctx;U.fillStyle=this.config.backgroundColor,U.fillRect(0,0,g,s);for(const I of this.stars){const C=I.x/I.z,F=I.y/I.z;if(!this.config.warpEffect&&(C<-.5||C>.5||F<-.5||F>.5))continue;const Q=I.size*this.size/I.z;if(!(Q<.3)){if(this.config.depthAlpha){const g=(1e3-I.z)/1e3;U.fillStyle=`rgba(${this.starR}, ${this.starG}, ${this.starB}, ${g.toString()})`}else U.fillStyle=this.config.starColor;if(this.config.warpEffect){U.beginPath();const c=I.x/(I.z+this.config.warpEffectLength*this.config.speed),B=I.y/(I.z+this.config.warpEffectLength*this.config.speed);if(c<-.5||c>.5||B<-.5||B>.5)continue;U.moveTo(g*(C+.5)-Q/2,s*(F+.5)-Q/2),U.lineTo(g*(c+.5)-Q/2,s*(B+.5)-Q/2),U.lineWidth=Math.min(Q,this.maxLineWidth),U.lineCap=this.config.useCircles?"round":"butt",U.strokeStyle=U.fillStyle,U.stroke()}else this.config.useCircles?(U.beginPath(),U.arc(g*(C+.5)-Q/2,s*(F+.5)-Q/2,Q/2,0,2*Math.PI),U.fill()):U.fillRect(g*(C+.5)-Q/2,s*(F+.5)-Q/2,Q,Q)}}}move(I){const g=this.config.speed*(I/10);for(const I of this.stars)for(I.z-=g;I.z<1;)I.z+=1e3,I.x=(Math.random()-.5)*I.z,I.y=(Math.random()-.5)*I.z}}function U(I,g,s){var U=void 0===g?null:g,C=function(I,g){var s=atob(I);if(g){for(var U=new Uint8Array(s.length),C=0,F=s.length;C<F;++C)U[C]=s.charCodeAt(C);return String.fromCharCode.apply(null,new Uint16Array(U.buffer))}return s}(I,void 0!==s&&s),F=C.indexOf("\n",10)+1,Q=C.substring(F)+(U?"//# sourceMappingURL="+U:""),c=new Blob([Q],{type:"application/javascript"});return URL.createObjectURL(c)}var C,F,Q,c,B=(C="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7Y29uc3QgdD0oKT0+MWUzKihNYXRoLnJhbmRvbSgpLS41KTtjbGFzcyBze2NvbnN0cnVjdG9yKHQscyxpKXt0aGlzLng9dCx0aGlzLnk9cyx0aGlzLno9aSx0aGlzLnNpemU9LjUrTWF0aC5yYW5kb20oKX19Y2xhc3MgaXtjb25maWc9e307c3RhcnM9W107Y29uc3RydWN0b3IodCl7dGhpcy5jYW52YXM9dCx0aGlzLmN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KCIyZCIpfXVwZGF0ZShpKXtmb3IoY29uc3RbbyxuXW9mIE9iamVjdC5lbnRyaWVzKGkpKWlmKHRoaXMuY29uZmlnW29dIT09bil7c3dpdGNoKG8pe2Nhc2UicmVzb2x1dGlvbiI6KGkuc3RhclNjYWxlfHx0aGlzLmNvbmZpZy5zdGFyU2NhbGUpJiYodGhpcy5zaXplPW4vKDEwLyhpLnN0YXJTY2FsZXx8dGhpcy5jb25maWcuc3RhclNjYWxlKSksdGhpcy5tYXhMaW5lV2lkdGg9dGhpcy5zaXplLzMwKTticmVhaztjYXNlInN0YXJTY2FsZSI6KGkucmVzb2x1dGlvbnx8dGhpcy5jb25maWcucmVzb2x1dGlvbikmJih0aGlzLnNpemU9KGkucmVzb2x1dGlvbnx8dGhpcy5jb25maWcucmVzb2x1dGlvbikvKDEwL24pLHRoaXMubWF4TGluZVdpZHRoPXRoaXMuc2l6ZS8zMCk7YnJlYWs7Y2FzZSJkZW5zaXR5Ijpjb25zdCBvPU1hdGguY2VpbCgxZTMqbiksYT1vLXRoaXMuc3RhcnMubGVuZ3RoO2lmKGE+MClmb3IobGV0IGk9MDtpPGE7aSsrKXtjb25zdCBpPW5ldyBzKHQoKSx0KCksMWUzKk1hdGgucmFuZG9tKCkpO3RoaXMuc3RhcnMucHVzaChpKX1lbHNlIHRoaXMuc3RhcnMubGVuZ3RoPW87YnJlYWs7Y2FzZSJzdGFyQ29sb3IiOmNvbnN0IHI9IiMiPT09KGU9bikuY2hhckF0KDApJiY3PT09ZS5sZW5ndGg/e3I6cGFyc2VJbnQoZS5zdWJzdHIoMSwyKSwxNiksZzpwYXJzZUludChlLnN1YnN0cigzLDIpLDE2KSxiOnBhcnNlSW50KGUuc3Vic3RyKDUsMiksMTYpfTp7cjoyNTUsZzoyNTUsYjoyNTV9O3RoaXMuc3RhclI9ci5yLHRoaXMuc3Rhckc9ci5nLHRoaXMuc3RhckI9ci5ifXRoaXMuY29uZmlnW29dPW59dmFyIGV9ZHJhdyh0KXt0aGlzLm1vdmUodCk7Y29uc3Qgcz10aGlzLmNvbmZpZy5yZXNvbHV0aW9uLGk9dGhpcy5jb25maWcucmVzb2x1dGlvbjt0aGlzLnNpemU9TWF0aC5tYXgocyxpKS8oMTAvdGhpcy5jb25maWcuc3RhclNjYWxlKTtjb25zdCBlPXRoaXMuY3R4O2UuZmlsbFN0eWxlPXRoaXMuY29uZmlnLmJhY2tncm91bmRDb2xvcixlLmZpbGxSZWN0KDAsMCxzLGkpO2Zvcihjb25zdCB0IG9mIHRoaXMuc3RhcnMpe2NvbnN0IG89dC54L3QueixuPXQueS90Lno7aWYoIXRoaXMuY29uZmlnLndhcnBFZmZlY3QmJihvPC0uNXx8bz4uNXx8bjwtLjV8fG4+LjUpKWNvbnRpbnVlO2NvbnN0IGE9dC5zaXplKnRoaXMuc2l6ZS90Lno7aWYoIShhPC4zKSl7aWYodGhpcy5jb25maWcuZGVwdGhBbHBoYSl7Y29uc3Qgcz0oMWUzLXQueikvMWUzO2UuZmlsbFN0eWxlPWByZ2JhKCR7dGhpcy5zdGFyUn0sICR7dGhpcy5zdGFyR30sICR7dGhpcy5zdGFyQn0sICR7cy50b1N0cmluZygpfSlgfWVsc2UgZS5maWxsU3R5bGU9dGhpcy5jb25maWcuc3RhckNvbG9yO2lmKHRoaXMuY29uZmlnLndhcnBFZmZlY3Qpe2UuYmVnaW5QYXRoKCk7Y29uc3Qgcj10LngvKHQueit0aGlzLmNvbmZpZy53YXJwRWZmZWN0TGVuZ3RoKnRoaXMuY29uZmlnLnNwZWVkKSxjPXQueS8odC56K3RoaXMuY29uZmlnLndhcnBFZmZlY3RMZW5ndGgqdGhpcy5jb25maWcuc3BlZWQpO2lmKHI8LS41fHxyPi41fHxjPC0uNXx8Yz4uNSljb250aW51ZTtlLm1vdmVUbyhzKihvKy41KS1hLzIsaSoobisuNSktYS8yKSxlLmxpbmVUbyhzKihyKy41KS1hLzIsaSooYysuNSktYS8yKSxlLmxpbmVXaWR0aD1NYXRoLm1pbihhLHRoaXMubWF4TGluZVdpZHRoKSxlLmxpbmVDYXA9dGhpcy5jb25maWcudXNlQ2lyY2xlcz8icm91bmQiOiJidXR0IixlLnN0cm9rZVN0eWxlPWUuZmlsbFN0eWxlLGUuc3Ryb2tlKCl9ZWxzZSB0aGlzLmNvbmZpZy51c2VDaXJjbGVzPyhlLmJlZ2luUGF0aCgpLGUuYXJjKHMqKG8rLjUpLWEvMixpKihuKy41KS1hLzIsYS8yLDAsMipNYXRoLlBJKSxlLmZpbGwoKSk6ZS5maWxsUmVjdChzKihvKy41KS1hLzIsaSoobisuNSktYS8yLGEsYSl9fX1tb3ZlKHQpe2NvbnN0IHM9dGhpcy5jb25maWcuc3BlZWQqKHQvMTApO2Zvcihjb25zdCB0IG9mIHRoaXMuc3RhcnMpZm9yKHQuei09czt0Lno8MTspdC56Kz0xZTMsdC54PShNYXRoLnJhbmRvbSgpLS41KSp0LnosdC55PShNYXRoLnJhbmRvbSgpLS41KSp0Lnp9fWxldCBlLG8sbjtjb25zdCBhPXQ9PntufHwoZS5kcmF3KG51bGw9PT1vPzE6dC1vKSxvPXQscmVxdWVzdEFuaW1hdGlvbkZyYW1lKGEpKX07b25tZXNzYWdlPSh7ZGF0YTp7Y2FudmFzOnQsY29uZmlnOnMscGF1c2U6cn19KT0+e3ZvaWQgMCE9PXQmJihlPW5ldyBpKHQpKSx2b2lkIDAhPT1zJiZlLnVwZGF0ZShzKSx2b2lkIDAhPT1yJiYobj1yLG58fChvPW51bGwscmVxdWVzdEFuaW1hdGlvbkZyYW1lKGEpKSl9fSgpOwoK",F="data:application/json;charset=utf-8;base64,",Q=!1,function(I){return c=c||U(C,F,Q),new Worker(c,I)});AFRAME.registerComponent("warpspeed",{schema:{resolution:{type:"number",default:512},speed:{type:"number",default:.7},density:{type:"number",default:.7},useCircles:{type:"boolean",default:!0},depthAlpha:{type:"boolean",default:!0},warpEffect:{type:"boolean",default:!0},warpEffectLength:{type:"number",default:5},starScale:{type:"number",default:3},backgroundColor:{type:"color",default:"#100a1a"},starColor:{type:"color",default:"#ffffff"},useWorker:{type:"boolean",default:!1}},update(I){if(I.useWorker!==this.data.useWorker)if(void 0!==I.useWorker&&(I.useWorker?(this.worker.terminate(),delete this.worker):delete this.warpspeed,this.canvasMap.dispose(),delete this.canvas),this.canvas=document.createElement("canvas"),this.canvas.width=this.data.resolution,this.canvas.height=this.data.resolution,this.canvasMap=new THREE.Texture(this.canvas),this.el.getObject3D("mesh").material.map=this.canvasMap,this.data.useWorker){const I=this.canvas.transferControlToOffscreen();this.worker=new B,this.worker.postMessage({canvas:I},[I])}else this.warpspeed=new s(this.canvas);this.data.useWorker?this.worker.postMessage({config:this.data,pause:!this.isPlaying}):this.warpspeed.update(this.data)},play(){this.data.useWorker&&this.worker.postMessage({pause:!1})},pause(){this.data.useWorker&&this.worker.postMessage({pause:!0})},tick(I,g){this.data.useWorker||this.warpspeed.draw(g),this.canvasMap.needsUpdate=!0}});
