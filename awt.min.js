class I{constructor(I,g,s){this.x=I,this.y=g,this.z=s,this.size=.5+Math.random()}}const g=()=>1e3*(Math.random()-.5);class s{config={};stars=[];constructor(I){this.canvas=I,this.ctx=this.canvas.getContext("2d")}update(s){for(const[U,F]of Object.entries(s))if(this.config[U]!==F){switch(U){case"speed":case"targetSpeed":case"speedAdjFactor":this.speed=s.speed||this.config.speed;break;case"resolution":(s.starScale||this.config.starScale)&&(this.size=F/(10/(s.starScale||this.config.starScale)),this.maxLineWidth=this.size/30);break;case"starScale":(s.resolution||this.config.resolution)&&(this.size=(s.resolution||this.config.resolution)/(10/F),this.maxLineWidth=this.size/30);break;case"density":const U=Math.ceil(1e3*F),C=U-this.stars.length;if(C>0)for(let s=0;s<C;s++){const s=new I(g(),g(),1e3*Math.random());this.stars.push(s)}else this.stars.length=U;break;case"starColor":const c="#"===(Q=F).charAt(0)&&7===Q.length?{r:parseInt(Q.substr(1,2),16),g:parseInt(Q.substr(3,2),16),b:parseInt(Q.substr(5,2),16)}:{r:255,g:255,b:255};this.starR=c.r,this.starG=c.g,this.starB=c.b}this.config[U]=F}var Q}draw(I){this.move(I);const g=this.config.resolution,s=this.config.resolution;this.size=Math.max(g,s)/(10/this.config.starScale);const Q=this.ctx;Q.fillStyle=this.config.backgroundColor,Q.fillRect(0,0,g,s);for(const I of this.stars){const U=I.x/I.z,F=I.y/I.z;if(!this.config.warpEffect&&(U<-.5||U>.5||F<-.5||F>.5))continue;const C=I.size*this.size/I.z;if(!(C<.3)){if(this.config.depthAlpha){const g=(1e3-I.z)/1e3;Q.fillStyle=`rgba(${this.starR}, ${this.starG}, ${this.starB}, ${g.toString()})`}else Q.fillStyle=this.config.starColor;if(this.config.warpEffect){Q.beginPath();const c=I.x/(I.z+this.config.warpEffectLength*this.speed),B=I.y/(I.z+this.config.warpEffectLength*this.speed);if(c<-.5||c>.5||B<-.5||B>.5)continue;Q.moveTo(g*(U+.5)-C/2,s*(F+.5)-C/2),Q.lineTo(g*(c+.5)-C/2,s*(B+.5)-C/2),Q.lineWidth=Math.min(C,this.maxLineWidth),Q.lineCap=this.config.useCircles?"round":"butt",Q.strokeStyle=Q.fillStyle,Q.stroke()}else this.config.useCircles?(Q.beginPath(),Q.arc(g*(U+.5)-C/2,s*(F+.5)-C/2,C/2,0,2*Math.PI),Q.fill()):Q.fillRect(g*(U+.5)-C/2,s*(F+.5)-C/2,C,C)}}}move(I){const g=I/10,s=Math.pow(this.config.speedAdjFactor,1/g);this.speed=this.config.targetSpeed*s+this.speed*(1-s),this.speed<0&&(this.speed=0);const Q=this.speed*g;for(const I of this.stars)for(I.z-=Q;I.z<1;)I.z+=1e3,I.x=(Math.random()-.5)*I.z,I.y=(Math.random()-.5)*I.z}}function Q(I,g,s){var Q=void 0===g?null:g,U=function(I,g){var s=atob(I);if(g){for(var Q=new Uint8Array(s.length),U=0,F=s.length;U<F;++U)Q[U]=s.charCodeAt(U);return String.fromCharCode.apply(null,new Uint16Array(Q.buffer))}return s}(I,void 0!==s&&s),F=U.indexOf("\n",10)+1,C=U.substring(F)+(Q?"//# sourceMappingURL="+Q:""),c=new Blob([C],{type:"application/javascript"});return URL.createObjectURL(c)}var U,F,C,c,B=(U="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LHMsaSl7dGhpcy54PXQsdGhpcy55PXMsdGhpcy56PWksdGhpcy5zaXplPS41K01hdGgucmFuZG9tKCl9fWNvbnN0IHM9KCk9PjFlMyooTWF0aC5yYW5kb20oKS0uNSk7Y2xhc3MgaXtjb25maWc9e307c3RhcnM9W107Y29uc3RydWN0b3IodCl7dGhpcy5jYW52YXM9dCx0aGlzLmN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KCIyZCIpfXVwZGF0ZShpKXtmb3IoY29uc3RbbyxhXW9mIE9iamVjdC5lbnRyaWVzKGkpKWlmKHRoaXMuY29uZmlnW29dIT09YSl7c3dpdGNoKG8pe2Nhc2Uic3BlZWQiOmNhc2UidGFyZ2V0U3BlZWQiOmNhc2Uic3BlZWRBZGpGYWN0b3IiOnRoaXMuc3BlZWQ9aS5zcGVlZHx8dGhpcy5jb25maWcuc3BlZWQ7YnJlYWs7Y2FzZSJyZXNvbHV0aW9uIjooaS5zdGFyU2NhbGV8fHRoaXMuY29uZmlnLnN0YXJTY2FsZSkmJih0aGlzLnNpemU9YS8oMTAvKGkuc3RhclNjYWxlfHx0aGlzLmNvbmZpZy5zdGFyU2NhbGUpKSx0aGlzLm1heExpbmVXaWR0aD10aGlzLnNpemUvMzApO2JyZWFrO2Nhc2Uic3RhclNjYWxlIjooaS5yZXNvbHV0aW9ufHx0aGlzLmNvbmZpZy5yZXNvbHV0aW9uKSYmKHRoaXMuc2l6ZT0oaS5yZXNvbHV0aW9ufHx0aGlzLmNvbmZpZy5yZXNvbHV0aW9uKS8oMTAvYSksdGhpcy5tYXhMaW5lV2lkdGg9dGhpcy5zaXplLzMwKTticmVhaztjYXNlImRlbnNpdHkiOmNvbnN0IG89TWF0aC5jZWlsKDFlMyphKSxuPW8tdGhpcy5zdGFycy5sZW5ndGg7aWYobj4wKWZvcihsZXQgaT0wO2k8bjtpKyspe2NvbnN0IGk9bmV3IHQocygpLHMoKSwxZTMqTWF0aC5yYW5kb20oKSk7dGhpcy5zdGFycy5wdXNoKGkpfWVsc2UgdGhpcy5zdGFycy5sZW5ndGg9bzticmVhaztjYXNlInN0YXJDb2xvciI6Y29uc3QgaD0iIyI9PT0oZT1hKS5jaGFyQXQoMCkmJjc9PT1lLmxlbmd0aD97cjpwYXJzZUludChlLnN1YnN0cigxLDIpLDE2KSxnOnBhcnNlSW50KGUuc3Vic3RyKDMsMiksMTYpLGI6cGFyc2VJbnQoZS5zdWJzdHIoNSwyKSwxNil9OntyOjI1NSxnOjI1NSxiOjI1NX07dGhpcy5zdGFyUj1oLnIsdGhpcy5zdGFyRz1oLmcsdGhpcy5zdGFyQj1oLmJ9dGhpcy5jb25maWdbb109YX12YXIgZX1kcmF3KHQpe3RoaXMubW92ZSh0KTtjb25zdCBzPXRoaXMuY29uZmlnLnJlc29sdXRpb24saT10aGlzLmNvbmZpZy5yZXNvbHV0aW9uO3RoaXMuc2l6ZT1NYXRoLm1heChzLGkpLygxMC90aGlzLmNvbmZpZy5zdGFyU2NhbGUpO2NvbnN0IGU9dGhpcy5jdHg7ZS5maWxsU3R5bGU9dGhpcy5jb25maWcuYmFja2dyb3VuZENvbG9yLGUuZmlsbFJlY3QoMCwwLHMsaSk7Zm9yKGNvbnN0IHQgb2YgdGhpcy5zdGFycyl7Y29uc3Qgbz10LngvdC56LGE9dC55L3QuejtpZighdGhpcy5jb25maWcud2FycEVmZmVjdCYmKG88LS41fHxvPi41fHxhPC0uNXx8YT4uNSkpY29udGludWU7Y29uc3Qgbj10LnNpemUqdGhpcy5zaXplL3QuejtpZighKG48LjMpKXtpZih0aGlzLmNvbmZpZy5kZXB0aEFscGhhKXtjb25zdCBzPSgxZTMtdC56KS8xZTM7ZS5maWxsU3R5bGU9YHJnYmEoJHt0aGlzLnN0YXJSfSwgJHt0aGlzLnN0YXJHfSwgJHt0aGlzLnN0YXJCfSwgJHtzLnRvU3RyaW5nKCl9KWB9ZWxzZSBlLmZpbGxTdHlsZT10aGlzLmNvbmZpZy5zdGFyQ29sb3I7aWYodGhpcy5jb25maWcud2FycEVmZmVjdCl7ZS5iZWdpblBhdGgoKTtjb25zdCBoPXQueC8odC56K3RoaXMuY29uZmlnLndhcnBFZmZlY3RMZW5ndGgqdGhpcy5zcGVlZCkscj10LnkvKHQueit0aGlzLmNvbmZpZy53YXJwRWZmZWN0TGVuZ3RoKnRoaXMuc3BlZWQpO2lmKGg8LS41fHxoPi41fHxyPC0uNXx8cj4uNSljb250aW51ZTtlLm1vdmVUbyhzKihvKy41KS1uLzIsaSooYSsuNSktbi8yKSxlLmxpbmVUbyhzKihoKy41KS1uLzIsaSoocisuNSktbi8yKSxlLmxpbmVXaWR0aD1NYXRoLm1pbihuLHRoaXMubWF4TGluZVdpZHRoKSxlLmxpbmVDYXA9dGhpcy5jb25maWcudXNlQ2lyY2xlcz8icm91bmQiOiJidXR0IixlLnN0cm9rZVN0eWxlPWUuZmlsbFN0eWxlLGUuc3Ryb2tlKCl9ZWxzZSB0aGlzLmNvbmZpZy51c2VDaXJjbGVzPyhlLmJlZ2luUGF0aCgpLGUuYXJjKHMqKG8rLjUpLW4vMixpKihhKy41KS1uLzIsbi8yLDAsMipNYXRoLlBJKSxlLmZpbGwoKSk6ZS5maWxsUmVjdChzKihvKy41KS1uLzIsaSooYSsuNSktbi8yLG4sbil9fX1tb3ZlKHQpe2NvbnN0IHM9dC8xMCxpPU1hdGgucG93KHRoaXMuY29uZmlnLnNwZWVkQWRqRmFjdG9yLDEvcyk7dGhpcy5zcGVlZD10aGlzLmNvbmZpZy50YXJnZXRTcGVlZCppK3RoaXMuc3BlZWQqKDEtaSksdGhpcy5zcGVlZDwwJiYodGhpcy5zcGVlZD0wKTtjb25zdCBlPXRoaXMuc3BlZWQqcztmb3IoY29uc3QgdCBvZiB0aGlzLnN0YXJzKWZvcih0LnotPWU7dC56PDE7KXQueis9MWUzLHQueD0oTWF0aC5yYW5kb20oKS0uNSkqdC56LHQueT0oTWF0aC5yYW5kb20oKS0uNSkqdC56fX1sZXQgZSxvLGE7Y29uc3Qgbj10PT57YXx8KGUuZHJhdyhudWxsPT09bz8xOnQtbyksbz10LHJlcXVlc3RBbmltYXRpb25GcmFtZShuKSl9O29ubWVzc2FnZT0oe2RhdGE6e2NhbnZhczp0LGNvbmZpZzpzLHBhdXNlOmh9fSk9Pnt2b2lkIDAhPT10JiYoZT1uZXcgaSh0KSksdm9pZCAwIT09cyYmZS51cGRhdGUocyksdm9pZCAwIT09aCYmKGE9aCxhfHwobz1udWxsLHJlcXVlc3RBbmltYXRpb25GcmFtZShuKSkpfX0oKTsKCg==",F="data:application/json;charset=utf-8;base64,",C=!1,function(I){return c=c||Q(U,F,C),new Worker(c,I)});AFRAME.registerComponent("warpspeed",{schema:{resolution:{type:"number",default:512},speed:{type:"number",default:.7},targetSpeed:{type:"number",default:.7},speedAdjFactor:{type:"number",default:.03},density:{type:"number",default:.7},useCircles:{type:"boolean",default:!0},depthAlpha:{type:"boolean",default:!0},warpEffect:{type:"boolean",default:!0},warpEffectLength:{type:"number",default:5},starScale:{type:"number",default:3},backgroundColor:{type:"color",default:"#100a1a"},starColor:{type:"color",default:"#ffffff"},useWorker:{type:"boolean",default:!1}},update(I){if(I.useWorker!==this.data.useWorker)if(void 0!==I.useWorker&&(I.useWorker?(this.worker.terminate(),delete this.worker):delete this.warpspeed,this.canvasMap.dispose(),delete this.canvas),this.canvas=document.createElement("canvas"),this.canvas.width=this.data.resolution,this.canvas.height=this.data.resolution,this.canvasMap=new THREE.Texture(this.canvas),this.el.getObject3D("mesh").material.map=this.canvasMap,this.data.useWorker){const I=this.canvas.transferControlToOffscreen();this.worker=new B,this.worker.postMessage({canvas:I},[I])}else this.warpspeed=new s(this.canvas);this.data.useWorker?this.worker.postMessage({config:this.data,pause:!this.isPlaying}):this.warpspeed.update(this.data)},play(){this.data.useWorker&&this.worker.postMessage({pause:!1})},pause(){this.data.useWorker&&this.worker.postMessage({pause:!0})},tick(I,g){this.data.useWorker||this.warpspeed.draw(g),this.canvasMap.needsUpdate=!0}});
